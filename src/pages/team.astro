---
import BackOnTrackLayout from "../layouts/BackOnTrackLayout.astro";
import PocketBase from "pocketbase";
import TeamMember from "../components/TeamMember.astro";
import { existsSync, mkdirSync, writeFileSync } from "fs";
import { join } from "path";

const pb = new PocketBase("https://pb.backontrackus.org");

const records = await pb.collection("team").getFullList({
  filter: "hidden = false",
  sort: "-priority,+location,+title,+name",
});

const cacheDir = join(process.cwd(), "public", "cached-images");
if (!existsSync(cacheDir)) {
  mkdirSync(cacheDir, { recursive: true });
}

const processedRecords = await Promise.all(
  records.map(async (record) => {
    if (record.image) {
      const imageUrl = pb.getFileUrl(record, record.image);
      const fileName = `${record.id}-${record.image}`;
      const localPath = join(cacheDir, fileName);
      const publicPath = `/cached-images/${fileName}`;
      
      if (!existsSync(localPath) || process.env.NODE_ENV !== "production") {
        try {
          const response = await fetch(imageUrl);
          if (response.ok) {
            const buffer = await response.arrayBuffer();
            writeFileSync(localPath, new Uint8Array(buffer));
            console.log(`Cached image: ${fileName}`);
          }
        } catch (error) {
          console.warn(`Failed to cache image for ${record.name}:`, error);
          return { ...record, cachedImageUrl: imageUrl };
        }
      }
      
      return { ...record, cachedImageUrl: publicPath };
    }
    return record;
  })
);
---

<BackOnTrackLayout title="Team">
  <!-- team heading -->
  <div class="m-5">
    <h1
      class="p-3 text-center text-4xl font-extrabold text-bot-blue md:p-5 md:text-6xl"
    >
      Meet Our National Executives
    </h1>
    <hr class="m-3 md:m-5" />
    <h2
      class="p-1 text-center text-xl font-extrabold text-bot-blue md:p-3 md:text-2xl"
    >
      Meet the people who keep Back on Track on track!
    </h2>
  </div>

  <!-- team grid -->
  <div
    class="grid h-full flex-grow content-center justify-center sm:grid-cols-1 sm:px-20 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5"
  >
    {
      processedRecords
        .filter((record) => !record.retired)
        .map((record) => (
          <TeamMember pb={pb} record={record} />
        ))
    }
  </div>

  {() => {
    if (processedRecords.filter((record) => record.retired).length > 0) {
      return (
        <!-- acknowledgments heading -->
        <div class="m-5">
          <h1
            class="p-3 text-center text-3xl font-extrabold text-bot-blue md:p-5 md:text-6xl"
          >
            Acknowledgments
          </h1>
          <hr class="m-3 md:m-5" />
          <h2
            class="p-1 text-center text-lg font-extrabold text-bot-blue md:p-3 md:text-2xl"
          >
            Thank you to these people for shaping Back on Track into what it is today!
          </h2>
        </div>

        <!-- acknowledgments grid -->
        <div
          class="grid h-full flex-grow content-center justify-center sm:grid-cols-1 sm:px-20 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5"
        >
          {
            processedRecords
              .filter((record) => record.retired)
              .map((record) => (
                <TeamMember pb={pb} record={record} />
              ))
          }
        </div>
        );
    }
  }}
</BackOnTrackLayout>
